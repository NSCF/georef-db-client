{"version":3,"sources":["../src/components/georef/is.js"],"names":["Is","value","suppressError","console","error","Array","isArray","Number","isInteger","anInteger","length","nullOrUndefined","Object","keys","trim","variable","undefined","aPopulatedString"],"mappings":"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","file":"is.js","sourcesContent":["//from https://dev.to/bytebodger/javascript-type-checking-without-typescript-21aa\r\n//and https://github.com/bytebodger/type-checking\r\n\r\n//had to be modified to allow for debugging in VS Code\r\n\r\nexport default class Is {\r\n  /**\r\n   * @param {boolean} value\r\n   * @param {boolean} suppressError\r\n   * @returns {boolean}\r\n   */\r\n  static aBoolean(value = false, suppressError = false) {\r\n     if (typeof value === 'boolean')\r\n        return true;\r\n     if (!suppressError)\r\n        console.error(value, 'is not a Boolean');\r\n     return false;\r\n  };\r\n  \r\n  /**\r\n   * @param {function} value\r\n   * @param {boolean} suppressError\r\n   * @returns {boolean}\r\n   */\r\n  static aFunction(value = () => {}, suppressError = false) {\r\n     if (typeof value === 'function')\r\n        return true;\r\n     if (!suppressError)\r\n        console.error(value, 'is not a function');\r\n     return false;\r\n  };\r\n  \r\n  /**\r\n   * @param {[]} value\r\n   * @param {boolean} suppressError\r\n   * @returns {boolean}\r\n   */\r\n  static anArray(value = [], suppressError = false)  {\r\n     if (Array.isArray(value))\r\n        return true;\r\n     if (!suppressError)\r\n        console.error(value, 'is not an array');\r\n     return false;\r\n  };\r\n  \r\n  /**\r\n   * @param {number} value\r\n   * @param {boolean} suppressError\r\n   * @returns {boolean}\r\n   */\r\n  static anInteger(value = 0, suppressError = false) {\r\n     if (Number.isInteger(value))\r\n        return true;\r\n     if (!suppressError)\r\n        console.error(value, 'is not an integer');\r\n     return false;\r\n  };\r\n  \r\n  /**\r\n   * @param {Object} value\r\n   * @param {boolean} suppressError\r\n   * @returns {boolean}\r\n   */\r\n  static anObject(value = {}, suppressError = false) {\r\n     if (typeof value === 'object' && !Array.isArray(value) && value !== null)\r\n        return true;\r\n     if (!suppressError)\r\n        console.error(value, 'is not an object');\r\n     return false;\r\n  };\r\n  \r\n  /**\r\n   * @param {number} value\r\n   * @param {boolean} suppressError\r\n   * @returns {boolean}\r\n   */\r\n  static aNonNegativeInteger(value = -1, suppressError = false) {\r\n     return this.anInteger(value, suppressError) && value >= 0;\r\n  };\r\n  \r\n  /**\r\n   * @param {number} value\r\n   * @param {boolean} suppressError\r\n   * @returns {boolean}\r\n   */\r\n  static aNumber(value = 0, suppressError = false){\r\n     if (typeof value === 'number')\r\n        return true;\r\n     if (!suppressError)\r\n        console.error(value, 'is not a number');\r\n     return false;\r\n  };\r\n  \r\n  /**\r\n   * @param {[]} value\r\n   * @param {boolean} suppressError\r\n   * @returns {boolean}\r\n   */\r\n  static aPopulatedArray(value = [], suppressError = false) {\r\n     if (Array.isArray(value) && value.length > 0)\r\n        return true;\r\n     if (!suppressError)\r\n        console.error(value, 'is not a populated array');\r\n     return false;\r\n  };\r\n  \r\n  /**\r\n   * @param {Object} value\r\n   * @param {boolean} suppressError\r\n   * @returns {boolean}\r\n   */\r\n  static aPopulatedObject(value = {}, suppressError = false) {\r\n     if (this.nullOrUndefined(value)) {\r\n        if (!suppressError)\r\n           console.error(value, 'is not a populated object');\r\n        return false;\r\n     }\r\n     if (typeof value === 'object' && !Array.isArray(value) && Object.keys(value).length > 0)\r\n        return true;\r\n     if (!suppressError)\r\n        console.error(value, 'is not a populated object');\r\n     return false;\r\n  };\r\n  \r\n  /**\r\n   * @param {string} value\r\n   * @param {boolean} suppressError\r\n   * @returns {boolean}\r\n   */\r\n  static aPopulatedString(value = '', suppressError = false) {\r\n     if (typeof value === 'string' && value.trim() !== '')\r\n        return true;\r\n     if (!suppressError)\r\n        console.error(value, 'is not a populated string');\r\n     return false;\r\n  };\r\n  \r\n  /**\r\n   * @param {number} value\r\n   * @param {boolean} suppressError\r\n   * @returns {boolean}\r\n   */\r\n  static aPositiveInteger(value = -1, suppressError = false) {\r\n     return this.anInteger(value, suppressError) && value > 0;\r\n  };\r\n  \r\n  /**\r\n   * @param {string} value\r\n   * @param {boolean} suppressError\r\n   * @returns {boolean}\r\n   */\r\n  static aString(value = '', suppressError = false) {\r\n     if (typeof value === 'string')\r\n        return true;\r\n     if (!suppressError)\r\n        console.error(value, 'is not a string');\r\n     return false;\r\n  };\r\n  \r\n  /**\r\n   * @param {*} variable\r\n   * @returns {boolean}\r\n   */\r\n  static null(variable) {\r\n     return variable === null\r\n   };\r\n  \r\n  /**\r\n   * @param {*} variable\r\n   * @returns {boolean}\r\n   */\r\n  static nullOrUndefined(variable) {return (variable === undefined || variable === null);}\r\n  \r\n  /**\r\n   * @param {*} variable\r\n   * @returns {boolean}\r\n   */\r\n  static undefined(variable) {return variable === undefined}\r\n\r\n  static empty(variable, suppressError = false) {\r\n      if (this.nullOrUndefined(variable) || !this.aPopulatedString(variable)){\r\n         return true\r\n      }\r\n      else {\r\n         if (!suppressError) {\r\n            console.error(variable, 'is not empty');\r\n         }\r\n      }  \r\n   }\r\n}"]}