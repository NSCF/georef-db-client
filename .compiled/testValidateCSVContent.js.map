{"version":3,"sources":["../tests/testValidateCSVContent.js"],"names":["require","testFileName","String","raw","testFilePath","fullPath","path","join","requiredFields","countryField","recordIDField","localityField","collectorField","fs","readFile","then","fileString","fileSummary","countries","Object","keys","localityRecordIDMap","countryCheck","groupResults","countryCodes","i","console","log","catch","err"],"mappings":";;;;AAIA,+E;AACA,yE;AACA,6E;AACA,mC;AACA,4B,wRARA;AAEAA,QAAQ,kBAAR;AAQA,IAAIC,eAAeC,OAAOC,GAAtB,iBAAJ;AACA,IAAIC,eAAeF,OAAOC,GAAtB,kBAAJ;AACA,IAAIE,WAAWC,eAAKC,IAAL,CAAUH,YAAV,EAAwBH,YAAxB,CAAf;;AAEA,IAAIO,iBAAiB;AACnBC,kBAAc,aADK;AAEnBC,mBAAe,mBAFI;AAGnBC,mBAAe,cAHI;AAInBC,oBAAgB,gBAJG,EAArB;;;AAOAC,kBAAGC,QAAH,CAAYT,QAAZ,EAAsB,MAAtB,EAA8BU,IAA9B,CAAmC,sBAAa;AAC9C,sCAASC,UAAT,EAAqBR,cAArB,EAAqCO,IAArC,CAA0C,gBAAME,WAAN,EAAqB;;AAE7D,YAAIC,YAAYC,OAAOC,IAAP,CAAYH,YAAYI,mBAAxB,CAAhB;AACA,YAAIC,eAAe,MAAM,iCAAkBJ,SAAlB,CAAzB;;;AAGA,YAAIK,eAAe,MAAM,+BAAgBN,YAAYI,mBAA5B,EAAiD,QAAjD,EAA2DC,aAAaE,YAAxE,CAAzB;;AAEA,YAAIC,IAAI,CAAR;;AAEAC,gBAAQC,GAAR,CAAY,UAAZ;AACD,KAXD,EAWGC,KAXH,CAWS,uBAAOF,QAAQC,GAAR,CAAYE,GAAZ,CAAP,EAXT;AAYD,CAbD,EAaGD,KAbH,CAaS,uBAAOF,QAAQC,GAAR,CAAYE,GAAZ,CAAP,EAbT","file":"testValidateCSVContent.js","sourcesContent":["//this tests groupLocalities now too\r\n\r\nrequire('isomorphic-fetch')\r\n\r\nimport validate from '../src/CSVUtilities/validateCSVContent.js'\r\nimport groupLocalities from '../src/CSVUtilities/groupLocalities.js'\r\nimport validateCountries from '../src/dwcUtilities/validateCountries.js'\r\nimport fs from 'fs-extra'\r\nimport path from 'path'\r\n\r\nlet testFileName = String.raw`McGregorHerps_accessioned_wb_import_final - Copy for testing.csv`\r\nlet testFilePath = String.raw`C:\\Users\\engelbrechti\\Google Drive\\SANBI NSCF\\NSCF Data WG\\Current projects\\Herp specimen digitization\\HerpSpecimenData\\McGregor Herp Specimen Data`\r\nlet fullPath = path.join(testFilePath, testFileName)\r\n\r\nlet requiredFields = {\r\n  countryField: 'dwc:country',\r\n  recordIDField: 'dwc:catalogNumber',\r\n  localityField: 'dwc:locality',\r\n  collectorField: 'dwc:recordedBy'\r\n}\r\n\r\nfs.readFile(fullPath, 'utf8').then(fileString=> {\r\n  validate(fileString, requiredFields).then(async fileSummary => {\r\n\r\n    let countries = Object.keys(fileSummary.localityRecordIDMap)\r\n    let countryCheck = await validateCountries(countries)\r\n\r\n\r\n    let groupResults = await groupLocalities(fileSummary.localityRecordIDMap, 'testID', countryCheck.countryCodes )\r\n\r\n    let i = 0\r\n\r\n    console.log('all done')\r\n  }).catch(err => console.log(err))\r\n}).catch(err => console.log(err))"]}