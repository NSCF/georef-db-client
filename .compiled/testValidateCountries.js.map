{"version":3,"sources":["../tests/testValidateCountries.js"],"names":["require","then","Object","entries","results","countryCodes","key","value","console","log"],"mappings":";;AAEA,6E,kKAFAA,QAAQ,kBAAR;;AAIA,iCAAkB,CAAC,cAAD,EAAiB,SAAjB,EAA4B,SAA5B,EAAuC,KAAvC,EAA8C,OAA9C,EAAuD,OAAvD,CAAlB;AACCC,IADD,CACM,mBAAW;AACf;AADe,yGAEf,qBAAyBC,OAAOC,OAAP,CAAeC,QAAQC,YAAvB,CAAzB,8HAA8D,kDAApDC,GAAoD,kBAA/CC,KAA+C;AAC5DC,cAAQC,GAAR,CAAeH,GAAf,UAAuBC,KAAvB;AACD,KAJc;AAKhB,CAND","file":"testValidateCountries.js","sourcesContent":["require('isomorphic-fetch')\r\n\r\nimport validateCountries from '../src/dwcUtilities/validateCountries.js'\r\n\r\nvalidateCountries(['South Africa', 'Namibia', 'bla bla', '   ', 'Congo', 'Korea'])\r\n.then(results => {\r\n  //console.log(results.invalid.map(x => `${x.searchName}: ${x.message}`).join('; '))\r\n  for (let [key, value] of Object.entries(results.countryCodes)){\r\n    console.log(`${key}: ${value}`)\r\n  }\r\n})"]}