{"version":3,"sources":["../tests/testValidateDarwinCoreFields.js"],"names":["then","results","testTerms","dwcterms","i","err","console","log","message","catch"],"mappings":"aAAA,kF;AACA,oE;;AAEA,mCAASA,IAAT,CAAc,oBAAY;AACxB,MAAG;AACD,QAAIC,UAAU,wCAAeC,SAAf,EAA0BC,QAA1B,CAAd;AACA,QAAIC,IAAI,CAAR;AACD;AACD,SAAMC,GAAN,EAAW;AACTC,YAAQC,GAAR,CAAY,6BAAZ,EAA2CF,IAAIG,OAA/C;AACD;;AAEF,CATD,EASGC,KATH,CASS,uBAAOH,QAAQC,GAAR,CAAY,0BAAZ,EAAwCF,IAAIG,OAA5C,CAAP,EATT;;AAWA,IAAIN,YAAY;AACd,gBADc;AAEd,eAFc;AAGd,gBAHc;AAId,gBAJc;AAKd,mBALc;AAMd,qBANc;AAOd,WAPc;AAQd,UARc;AASd,KATc;AAUd,eAVc,CAAhB","file":"testValidateDarwinCoreFields.js","sourcesContent":["import validateFields from '../src/svelte/validateDarwinCoreFields'\r\nimport getDWC from '../src/svelte/parseDWCReference'\r\n\r\ngetDWC().then(dwcterms => {\r\n  try{\r\n    let results = validateFields(testTerms, dwcterms)\r\n    let i = 0\r\n  }\r\n  catch(err) {\r\n    console.log('error validating dwc terms:', err.message)\r\n  }\r\n\r\n}).catch(err => console.log('error getting dwc terms:', err.message))\r\n\r\nlet testTerms = [\r\n  'CcatalogNumber',\r\n  'catalognumber',\r\n  'CcatalogNumber',\r\n  'catalognumber2',\r\n  'dwc:catalogNumber',\r\n  'otherCatalogNumbers',\r\n  'someField',\r\n  'dwc:sexx', \r\n  'typ',\r\n  'dc:references'\r\n]"]}